package com.bingdou.core.service.user;import com.bingdou.core.helper.DeviceInfo;import com.bingdou.core.model.Os;import com.bingdou.core.repository.user.DeviceDao;import com.bingdou.tools.LogContext;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;/** * Created by gaoshan on 16-11-24. */@Servicepublic class DeviceService {    @Autowired    private DeviceDao deviceDao;    public boolean isNewDevice(DeviceInfo deviceInfo) {        LogContext.instance().info("是否是新设备逻辑");        //TODO 加入REDIS缓存        if (deviceInfo == null)            return false;        if (Os.ANDROID.getIndex() == deviceInfo.getOs()                && deviceInfo.getAndroidInfo() != null) {            int count = getAndroidDeviceCount(deviceInfo);            if (count == 0)                return false;            insertAndroidDevice(deviceInfo);            return true;        } else if (Os.IOS.getIndex() == deviceInfo.getOs()                && deviceInfo.getIosInfo() != null) {            if (StringUtils.isEmpty(deviceInfo.getIosInfo().getIdfa())) {                return false;            }            int count = getIosDeviceCountByIdfa(deviceInfo.getIosInfo().getIdfa());            if (count == 0) {                insertIosDevice(deviceInfo.getIosInfo());                return true;            }            return false;        } else {            return false;        }    }    private int getAndroidDeviceCount(DeviceInfo deviceInfo) {        if (deviceInfo == null || deviceInfo.getAndroidInfo() == null)            return -1;        return deviceDao.getAndroidDeviceCount(deviceInfo);    }    private int getIosDeviceCountByIdfa(String idfa) {        if (StringUtils.isEmpty(idfa))            return -1;        return deviceDao.getIosDeviceCountByIdfa(idfa);    }    private void insertAndroidDevice(DeviceInfo deviceInfo) {        if (deviceInfo == null || deviceInfo.getAndroidInfo() == null)            return;        deviceDao.insertAndroidDevice(deviceInfo);    }    private void insertIosDevice(DeviceInfo.IosInfo iosInfo) {        if (iosInfo == null)            return;        deviceDao.insertIosDevice(iosInfo);    }}