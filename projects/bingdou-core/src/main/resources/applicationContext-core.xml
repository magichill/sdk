<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com.bingdou.core">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:property-placeholder location="classpath*:*.properties"/>

    <!-- 数据源配置 BEGIN -->
    <bean id="abstractDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${db.jdbcDriverClass}"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="50"/>
        <!--超时等待时间以毫秒为单位-->
        <property name="maxWait" value="5000"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="5"/>
        <!--是否自动回收超时连接-->
        <property name="removeAbandoned" value="true"/>
        <!--超时时间,以秒数为单位-->
        <property name="removeAbandonedTimeout" value="180"/>
        <!--每xx运行一次空闲连接回收器，单位毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!--池中的连接空闲30分钟后被回收-->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="numTestsPerEvictionRun" value="5" />
    </bean>

    <bean id="masterDataSource" parent="abstractDataSource">
        <property name="url" value="${db.master.jdbcUrl}"/>
        <property name="username" value="${db.master.username}"/>
        <property name="password" value="${db.master.password}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="masterDataSource"/>
        <property name="mapperLocations" value="classpath:maps/**/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="masterDataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bingdou.core.mapper"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWait" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.timeout}"/>
        <!--<constructor-arg index="4" value="${redis.password}"/>-->
    </bean>

</beans>